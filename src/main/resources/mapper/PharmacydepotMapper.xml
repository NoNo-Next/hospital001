<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blue.hospital.dao.PharmacydepotMapper">
  <resultMap id="BaseResultMap" type="com.blue.hospital.entity.Pharmacydepot">
    <id column="pharmacyDepotId" jdbcType="INTEGER" property="pharmacydepotid" />
    <result column="receiptId" jdbcType="INTEGER" property="receiptid" />
    <result column="chargePersonId" jdbcType="INTEGER" property="chargepersonid" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="area" jdbcType="DOUBLE" property="area" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pharmacyDepotId, receiptId, chargePersonId, category, area
  </sql>
  <select id="selectByExample" parameterType="com.blue.hospital.entity.PharmacydepotExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pharmacydepot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pharmacydepot
    where pharmacyDepotId = #{pharmacydepotid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pharmacydepot
    where pharmacyDepotId = #{pharmacydepotid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blue.hospital.entity.PharmacydepotExample">
    delete from pharmacydepot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blue.hospital.entity.Pharmacydepot">
    insert into pharmacydepot (pharmacyDepotId, receiptId, chargePersonId, 
      category, area)
    values (#{pharmacydepotid,jdbcType=INTEGER}, #{receiptid,jdbcType=INTEGER}, #{chargepersonid,jdbcType=INTEGER}, 
      #{category,jdbcType=VARCHAR}, #{area,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.blue.hospital.entity.Pharmacydepot">
    insert into pharmacydepot
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pharmacydepotid != null">
        pharmacyDepotId,
      </if>
      <if test="receiptid != null">
        receiptId,
      </if>
      <if test="chargepersonid != null">
        chargePersonId,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="area != null">
        area,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pharmacydepotid != null">
        #{pharmacydepotid,jdbcType=INTEGER},
      </if>
      <if test="receiptid != null">
        #{receiptid,jdbcType=INTEGER},
      </if>
      <if test="chargepersonid != null">
        #{chargepersonid,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blue.hospital.entity.PharmacydepotExample" resultType="java.lang.Long">
    select count(*) from pharmacydepot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pharmacydepot
    <set>
      <if test="record.pharmacydepotid != null">
        pharmacyDepotId = #{record.pharmacydepotid,jdbcType=INTEGER},
      </if>
      <if test="record.receiptid != null">
        receiptId = #{record.receiptid,jdbcType=INTEGER},
      </if>
      <if test="record.chargepersonid != null">
        chargePersonId = #{record.chargepersonid,jdbcType=INTEGER},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pharmacydepot
    set pharmacyDepotId = #{record.pharmacydepotid,jdbcType=INTEGER},
      receiptId = #{record.receiptid,jdbcType=INTEGER},
      chargePersonId = #{record.chargepersonid,jdbcType=INTEGER},
      category = #{record.category,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blue.hospital.entity.Pharmacydepot">
    update pharmacydepot
    <set>
      <if test="receiptid != null">
        receiptId = #{receiptid,jdbcType=INTEGER},
      </if>
      <if test="chargepersonid != null">
        chargePersonId = #{chargepersonid,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=DOUBLE},
      </if>
    </set>
    where pharmacyDepotId = #{pharmacydepotid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blue.hospital.entity.Pharmacydepot">
    update pharmacydepot
    set receiptId = #{receiptid,jdbcType=INTEGER},
      chargePersonId = #{chargepersonid,jdbcType=INTEGER},
      category = #{category,jdbcType=VARCHAR},
      area = #{area,jdbcType=DOUBLE}
    where pharmacyDepotId = #{pharmacydepotid,jdbcType=INTEGER}
  </update>
</mapper>