<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blue.hospital.dao.ProcessingschemeMapper">
  <resultMap id="BaseResultMap" type="com.blue.hospital.entity.Processingscheme">
    <id column="processingSchemeNo" jdbcType="INTEGER" property="processingschemeno" />
    <result column="physicianId" jdbcType="INTEGER" property="physicianid" />
    <result column="beginTime" jdbcType="VARCHAR" property="begintime" />
    <result column="processingSchemeContext" jdbcType="VARCHAR" property="processingschemecontext" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    processingSchemeNo, physicianId, beginTime, processingSchemeContext
  </sql>
  <select id="selectByExample" parameterType="com.blue.hospital.entity.ProcessingschemeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from processingscheme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from processingscheme
    where processingSchemeNo = #{processingschemeno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from processingscheme
    where processingSchemeNo = #{processingschemeno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blue.hospital.entity.ProcessingschemeExample">
    delete from processingscheme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blue.hospital.entity.Processingscheme">
    insert into processingscheme (processingSchemeNo, physicianId, 
      beginTime, processingSchemeContext)
    values (#{processingschemeno,jdbcType=INTEGER}, #{physicianid,jdbcType=INTEGER}, 
      #{begintime,jdbcType=VARCHAR}, #{processingschemecontext,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blue.hospital.entity.Processingscheme">
    insert into processingscheme
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="processingschemeno != null">
        processingSchemeNo,
      </if>
      <if test="physicianid != null">
        physicianId,
      </if>
      <if test="begintime != null">
        beginTime,
      </if>
      <if test="processingschemecontext != null">
        processingSchemeContext,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="processingschemeno != null">
        #{processingschemeno,jdbcType=INTEGER},
      </if>
      <if test="physicianid != null">
        #{physicianid,jdbcType=INTEGER},
      </if>
      <if test="begintime != null">
        #{begintime,jdbcType=VARCHAR},
      </if>
      <if test="processingschemecontext != null">
        #{processingschemecontext,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blue.hospital.entity.ProcessingschemeExample" resultType="java.lang.Long">
    select count(*) from processingscheme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update processingscheme
    <set>
      <if test="record.processingschemeno != null">
        processingSchemeNo = #{record.processingschemeno,jdbcType=INTEGER},
      </if>
      <if test="record.physicianid != null">
        physicianId = #{record.physicianid,jdbcType=INTEGER},
      </if>
      <if test="record.begintime != null">
        beginTime = #{record.begintime,jdbcType=VARCHAR},
      </if>
      <if test="record.processingschemecontext != null">
        processingSchemeContext = #{record.processingschemecontext,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update processingscheme
    set processingSchemeNo = #{record.processingschemeno,jdbcType=INTEGER},
      physicianId = #{record.physicianid,jdbcType=INTEGER},
      beginTime = #{record.begintime,jdbcType=VARCHAR},
      processingSchemeContext = #{record.processingschemecontext,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blue.hospital.entity.Processingscheme">
    update processingscheme
    <set>
      <if test="physicianid != null">
        physicianId = #{physicianid,jdbcType=INTEGER},
      </if>
      <if test="begintime != null">
        beginTime = #{begintime,jdbcType=VARCHAR},
      </if>
      <if test="processingschemecontext != null">
        processingSchemeContext = #{processingschemecontext,jdbcType=VARCHAR},
      </if>
    </set>
    where processingSchemeNo = #{processingschemeno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blue.hospital.entity.Processingscheme">
    update processingscheme
    set physicianId = #{physicianid,jdbcType=INTEGER},
      beginTime = #{begintime,jdbcType=VARCHAR},
      processingSchemeContext = #{processingschemecontext,jdbcType=VARCHAR}
    where processingSchemeNo = #{processingschemeno,jdbcType=INTEGER}
  </update>
</mapper>