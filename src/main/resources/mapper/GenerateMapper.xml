<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blue.hospital.dao.GenerateMapper">
  <resultMap id="BaseResultMap" type="com.blue.hospital.entity.Generate">
    <id column="receipt" jdbcType="INTEGER" property="receipt" />
    <result column="prescription" jdbcType="INTEGER" property="prescription" />
    <result column="serialNumber" jdbcType="INTEGER" property="serialnumber" />
    <result column="generate" jdbcType="INTEGER" property="generate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    receipt, prescription, serialNumber, generate
  </sql>
  <select id="selectByExample" parameterType="com.blue.hospital.entity.GenerateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from generate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from generate
    where receipt = #{receipt,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from generate
    where receipt = #{receipt,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blue.hospital.entity.GenerateExample">
    delete from generate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blue.hospital.entity.Generate">
    insert into generate (receipt, prescription, serialNumber, 
      generate)
    values (#{receipt,jdbcType=INTEGER}, #{prescription,jdbcType=INTEGER}, #{serialnumber,jdbcType=INTEGER}, 
      #{generate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.blue.hospital.entity.Generate">
    insert into generate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="receipt != null">
        receipt,
      </if>
      <if test="prescription != null">
        prescription,
      </if>
      <if test="serialnumber != null">
        serialNumber,
      </if>
      <if test="generate != null">
        generate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="receipt != null">
        #{receipt,jdbcType=INTEGER},
      </if>
      <if test="prescription != null">
        #{prescription,jdbcType=INTEGER},
      </if>
      <if test="serialnumber != null">
        #{serialnumber,jdbcType=INTEGER},
      </if>
      <if test="generate != null">
        #{generate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blue.hospital.entity.GenerateExample" resultType="java.lang.Long">
    select count(*) from generate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update generate
    <set>
      <if test="record.receipt != null">
        receipt = #{record.receipt,jdbcType=INTEGER},
      </if>
      <if test="record.prescription != null">
        prescription = #{record.prescription,jdbcType=INTEGER},
      </if>
      <if test="record.serialnumber != null">
        serialNumber = #{record.serialnumber,jdbcType=INTEGER},
      </if>
      <if test="record.generate != null">
        generate = #{record.generate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update generate
    set receipt = #{record.receipt,jdbcType=INTEGER},
      prescription = #{record.prescription,jdbcType=INTEGER},
      serialNumber = #{record.serialnumber,jdbcType=INTEGER},
      generate = #{record.generate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blue.hospital.entity.Generate">
    update generate
    <set>
      <if test="prescription != null">
        prescription = #{prescription,jdbcType=INTEGER},
      </if>
      <if test="serialnumber != null">
        serialNumber = #{serialnumber,jdbcType=INTEGER},
      </if>
      <if test="generate != null">
        generate = #{generate,jdbcType=INTEGER},
      </if>
    </set>
    where receipt = #{receipt,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blue.hospital.entity.Generate">
    update generate
    set prescription = #{prescription,jdbcType=INTEGER},
      serialNumber = #{serialnumber,jdbcType=INTEGER},
      generate = #{generate,jdbcType=INTEGER}
    where receipt = #{receipt,jdbcType=INTEGER}
  </update>
</mapper>